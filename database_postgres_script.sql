CREATE TABLE public.data (
	rowguid UUID NOT NULL,
	json JSONB NOT NULL,
	CONSTRAINT data_pkey PRIMARY KEY (rowguid)
);

CREATE TABLE public.sync_data (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	userid UUID NOT NULL,
	clientid UUID NOT NULL,
	tablename VARCHAR(255) NOT NULL,
	rowguid UUID NOT NULL,
	operation CHAR NOT NULL,
	clientdate INT8 NOT NULL,
	serverdate INT8 NOT NULL
);


create INDEX sync_data_userid on public.sync_data (userid, serverdate) ;


CREATE TABLE public.user_clients (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	clientid UUID NOT NULL,
	userid UUID NOT NULL,
	lastsync INT8 NULL,
	syncing INT8 NULL,
	clientdetails JSONB NULL);

CREATE UNIQUE INDEX user_clients_idx on public.user_clients (clientid ASC);


CREATE TABLE public.user_tokens (
	clientid UUID NOT NULL,
	token VARCHAR(36) NOT NULL,
	refreshtoken VARCHAR(36) NOT NULL,
	lastrefresh INT8 NULL,
	CONSTRAINT user_tokens_pkey PRIMARY KEY (clientid)
);

CREATE INDEX user_tokens_token_idx ON public.user_tokens ("token");
CREATE INDEX user_tokens_refreshtoken_idx ON public.user_tokens (refreshtoken);

CREATE TABLE public.users (
	id UUID NOT NULL,
	name VARCHAR(255) NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	salt VARCHAR(255) NOT NULL,
	language VARCHAR(10) NULL,
	CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE UNIQUE INDEX users_email_idx ON public."users" (email);

CREATE TABLE public.users_pin (
	userid UUID NOT NULL,
	pin varchar(10) NOT NULL,
	created int8 NOT NULL,
	CONSTRAINT users_pin_pk PRIMARY KEY (userid)
);

